# Generated by Django 2.2.5 on 2019-12-31 14:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('area_name', models.CharField(max_length=8, verbose_name='区域名称')),
            ],
            options={
                'verbose_name': '区域',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('brand_name', models.CharField(max_length=20, verbose_name='品牌名称')),
                ('brand_description', models.TextField(max_length=400, null=True, verbose_name='品牌描述')),
                ('brand_creator', models.CharField(max_length=20, verbose_name='品牌创建者')),
                ('brand_createDate', models.DateTimeField(auto_now_add=True, verbose_name='品牌创建时间')),
            ],
            options={
                'verbose_name': '品牌',
            },
        ),
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('center_name', models.CharField(max_length=20, verbose_name='中心名称')),
                ('area', models.CharField(max_length=20, verbose_name='区域')),
                ('center_remarks', models.TextField(max_length=400, null=True, verbose_name='中心备注')),
                ('center_creator', models.CharField(max_length=20, verbose_name='中心创建者')),
                ('center_createDate', models.DateTimeField(auto_now_add=True, verbose_name='中心创建时间')),
            ],
            options={
                'verbose_name': '中心',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_iden', models.CharField(max_length=7, unique=True, verbose_name='客户编码')),
                ('customer_name', models.CharField(max_length=20, verbose_name='客户名称')),
                ('customer_type', models.IntegerField(choices=[(0, '内部单位'), (1, '外部单位')], default=0, verbose_name='客户类型')),
                ('customer_remarks', models.TextField(max_length=400, null=True, verbose_name='客户备注')),
                ('customer_creator', models.CharField(max_length=20, verbose_name='客户创建者')),
                ('customer_createDate', models.DateTimeField(auto_now_add=True, verbose_name='客户创建时间')),
            ],
            options={
                'verbose_name': '客户',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dpm_name', models.CharField(max_length=20, verbose_name='部门名称')),
                ('dpm_remarks', models.TextField(max_length=400, null=True, verbose_name='部门备注')),
                ('dpm_center', models.IntegerField(choices=[(0, '非中心部门'), (1, '中心')], default=0, verbose_name='是否中心')),
                ('dpm_creator', models.CharField(max_length=20, verbose_name='部门创建人')),
                ('dpm_createDate', models.DateTimeField(auto_now_add=True, verbose_name='部门创建时间')),
            ],
            options={
                'verbose_name': '部门',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('material_iden', models.CharField(max_length=35, unique=True, verbose_name='物料编码')),
                ('material_name', models.CharField(max_length=20, verbose_name='物料名称')),
                ('material_specification', models.CharField(max_length=30, verbose_name='物料规格')),
                ('material_model', models.CharField(max_length=30, verbose_name='物料型号')),
                ('meterage_name', models.CharField(max_length=20, verbose_name='计量单位名称')),
                ('material_attr', models.IntegerField(choices=[(0, '存货'), (1, '固定资产'), (2, '费用')], verbose_name='存货属性')),
                ('material_creator', models.CharField(max_length=20, verbose_name='物料创建者')),
                ('material_createDate', models.DateTimeField(auto_now_add=True, verbose_name='物料创建时间')),
            ],
            options={
                'verbose_name': '物料',
            },
        ),
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_iden', models.CharField(max_length=30, unique=True, verbose_name='物料类别编码')),
                ('type_name', models.CharField(max_length=20, verbose_name='物料类别名称')),
                ('type_creator', models.CharField(max_length=20, verbose_name='物料类别创建者')),
                ('type_createDate', models.DateTimeField(auto_now_add=True, verbose_name='物料创建时间')),
            ],
            options={
                'verbose_name': '计量单位',
            },
        ),
        migrations.CreateModel(
            name='Meterage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('meterage_iden', models.CharField(max_length=6, unique=True, verbose_name='计量单位编码')),
                ('meterage_name', models.CharField(max_length=20, verbose_name='计量单位名称')),
                ('meterage_dimension', models.IntegerField(choices=[(0, '重量'), (1, '长度'), (2, '面积'), (3, '体积'), (4, '件数')], verbose_name='计量单位量纲')),
                ('meterage_creator', models.CharField(max_length=20, verbose_name='计量单位创建者')),
                ('meterage_createDate', models.DateTimeField(auto_now_add=True, verbose_name='计量单位创建时间')),
            ],
            options={
                'verbose_name': '计量单位',
            },
        ),
        migrations.CreateModel(
            name='Origanization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('orga_iden', models.CharField(max_length=6, unique=True, verbose_name='组织编码')),
                ('orga_name', models.CharField(max_length=20, verbose_name='组织名称')),
                ('area', models.CharField(max_length=20, verbose_name='区域')),
                ('orga_remarks', models.TextField(max_length=400, null=True, verbose_name='组织备注')),
                ('orga_creator', models.CharField(max_length=20, verbose_name='组织创建者')),
                ('orga_createDate', models.DateTimeField(auto_now_add=True, verbose_name='组织创建时间')),
            ],
            options={
                'verbose_name': '组织',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=15, verbose_name='角色名称')),
                ('role_description', models.TextField(max_length=400, null=True, verbose_name='角色描述')),
                ('role_creator', models.CharField(max_length=20, verbose_name='角色创建人')),
                ('role_createData', models.DateTimeField(auto_now_add=True, verbose_name='创建角色时间')),
            ],
            options={
                'verbose_name': '角色',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('supply_iden', models.CharField(max_length=7, unique=True, verbose_name='供应商编码')),
                ('supply_name', models.CharField(max_length=20, verbose_name='供应商名称')),
                ('supply_type', models.IntegerField(choices=[(0, '内部单位'), (1, '外部单位')], default=0, verbose_name='供应商类型')),
                ('supply_remarks', models.TextField(max_length=400, null=True, verbose_name='供应商备注')),
                ('supply_creator', models.CharField(max_length=20, verbose_name='供应商创建者')),
                ('supply_createDate', models.DateTimeField(auto_now_add=True, verbose_name='供应商创建时间')),
            ],
            options={
                'verbose_name': '供应商',
            },
        ),
        migrations.CreateModel(
            name='TotalWareHouse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('total_iden', models.CharField(max_length=6, unique=True, verbose_name='总仓库编码')),
                ('total_name', models.CharField(max_length=20, verbose_name='总仓名字')),
                ('brand_name', models.CharField(max_length=20, verbose_name='品牌名称')),
                ('total_remarks', models.TextField(max_length=400, verbose_name='总仓备注')),
                ('total_creator', models.CharField(max_length=20, verbose_name='总仓创建者')),
                ('total_createDate', models.DateTimeField(auto_now_add=True, verbose_name='总仓创建时间')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orga_total_ware_house', to='base.Origanization')),
            ],
            options={
                'verbose_name': '总仓',
            },
        ),
        migrations.CreateModel(
            name='CenterWareHouse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('center_wh_iden', models.CharField(max_length=6, unique=True, verbose_name='中心仓库编码')),
                ('center_wh_name', models.CharField(max_length=20, verbose_name='中心仓库名字')),
                ('brand_name', models.CharField(max_length=20, verbose_name='品牌名称')),
                ('center_wh_remarks', models.TextField(max_length=400, null=True, verbose_name='中心仓库备注')),
                ('center_wh_creator', models.CharField(max_length=20, verbose_name='中心创建者')),
                ('center_wh_createDate', models.DateTimeField(auto_now_add=True, verbose_name='中心创建时间')),
                ('origanization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orga_center_ware_house', to='base.Origanization', verbose_name='组织')),
            ],
            options={
                'verbose_name': '中心仓库',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_name', models.CharField(max_length=20, verbose_name='姓名')),
                ('user_mailbox', models.CharField(max_length=30, null=True, unique=True, verbose_name='邮箱')),
                ('area', models.CharField(max_length=20, verbose_name='区域')),
                ('user_departments', models.CharField(max_length=50, null=True, verbose_name='部门')),
                ('user_roles', models.CharField(max_length=50, null=True, verbose_name='角色')),
                ('user_creator', models.CharField(max_length=20, verbose_name='员工创建人')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '员工',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
